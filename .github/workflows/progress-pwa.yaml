name: Deploy to Google Cloud

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    env:
      CLOUD_RUN_REGION: us-west1
      CLOUDSDK_CORE_DISABLE_PROMPTS: 1 # prevent gcloud from prompting

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: som-rit-relief-app
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Authenticate with Service Account
        run: |
          # Write the GCP service account JSON to a file
          echo "${{ secrets.GCP_SA_KEY }}" > "$HOME/som-rit-relief-app.json"
          # Verify the JSON file is created correctly
          cat "$HOME/som-rit-relief-app.json"
          # Authenticate using the service account key
          gcloud auth activate-service-account --key-file="$HOME/som-rit-relief-app.json"

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install Missing Babel Plugin (Temporary Fix)
        run: npm install --save-dev @babel/plugin-proposal-private-property-in-object

      - name: Authenticate Docker with GCR
        run: gcloud auth configure-docker

      - name: Cache Google Cloud SDK
        uses: actions/cache@v3
        with:
          path: ${{ runner.temp }}/google-cloud-sdk
          key: ${{ runner.os }}-gcloud-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-gcloud-

      - name: Verify gcloud installation
        run: |
          if [ ! -d "$HOME/google-cloud-sdk/bin" ]; then
            curl https://sdk.cloud.google.com | bash;
          fi
          source "$HOME/google-cloud-sdk/path.bash.inc"
          gcloud version || true

      - name: Build and Deploy to Cloud Run
        run: |
          set -ex
          npm install
          npm run build
          gcloud app deploy app.yaml
